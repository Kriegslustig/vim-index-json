{
  "insert-index": {
    "^<C\\-@>$": "insert previously inserted text and stop insert",
    "^<C\\-A>$": "insert previously inserted text",
    "^<C\\-B>$":  "not used |i_CTRL-B-gone|",
    "^<C\\-C>$": "quit insert mode, without checking forabbreviation, unless 'insertmode' set.",
    "^<C\\-D>$": "delete one shiftwidth of indent in the currentline",
    "^<C\\-E>$": "insert the character which is below the cursor",
    "^<C\\-F>$": "not used (but by default it's in 'cinkeys' tore-indent the current line)",
    "^<C\\-G><C\\-J>$": "line down, to column where inserting started",
    "^<C\\-G>j$": "line down, to column where inserting started",
    "^<C\\-G><Down>$": "line down, to column where inserting started",
    "^<C\\-G><C\\-K>$": "line up, to column where inserting started",
    "^<C\\-G>k$": "line up, to column where inserting started",
    "^<C\\-G><Up>$": "line up, to column where inserting started",
    "^<C\\-G>u$": "start new undoable edit",
    "^<BS>$": "delete character before the cursor",
    "^(\\w)<BS>(\\w)$": "enter digraph (only when 'digraph' option set)",
    "^<C\\-H>$": "same as <BS>",
    "^<Tab>$": "insert a <Tab> character",
    "^<C\\-I>$": "same as <Tab>",
    "^<NL>$": "same as <CR>",
    "^<C\\-J>$": "same as <CR>",
    "^<C\\-K>(\\w)(\\w)$": "enter digraph",
    "^<C\\-L>$": "when 'insertmode' set: Leave Insert mode",
    "^<CR>$": "begin new line",
    "^<C\\-M>$": "same as <CR>",
    "^<C\\-N>$": "find next match for keyword in front of thecursor",
    "^<C\\-O>$": "execute a single command and return to insertmode",
    "^<C\\-P>$": "find previous match for keyword in front ofthe cursor",
    "^<C\\-Q>$": "same as CTRL-V, unless used for terminalcontrol flow",
    "^<C\\-R>([0-9a-z\"%#*:=])$": "insert the contents of a register",
    "^<C\\-R><C\\-R>([0-9a-z\"%#*:=])$": "insert the contents of a register literally",
    "^<C\\-R><C\\-O>([0-9a-z\"%#*:=])$": "insert the contents of a register literallyand don't auto-indent",
    "^<C\\-R><C\\-P>([0-9a-z\"%#*:=])$": "insert the contents of a register literallyand fix indent. CTRL-S (used for terminal control flow)",
    "^<C\\-T>$": "insert one shiftwidth of indent in currentline",
    "^<C\\-U>$": "delete all entered characters in the currentline",
    "^<C\\-V>(\\w)$": "insert next non-digit literally",
    "^<C\\-V>$": "{number} insert three digit decimal number as a singlebyte.",
    "^<C\\-W>$": "delete word before the cursor",
    "^<C\\-X>{mode}$": "enter CTRL-X sub mode, see |i_CTRL-X_index|",
    "^<C\\-Y>$": "insert the character which is above the cursor",
    "^<C\\-Z>$": "when 'insertmode' set: suspend Vim",
    "^<Esc>$": "end insert mode (unless 'insertmode' set)",
    "^<C\\-\\[>$": "same as <Esc>",
    "^<C\\-\\\\><C\\-N>$": "go to Normal mode",
    "^<C\\-\\\\><C\\-G>$": "go to mode specified with 'insertmode'",
    "^<C\\-\\\\>[a-z]$": "reserved for extensions",
    "^<C\\-\\\\>$": "others not used",
    "^<C\\-]>$": "trigger abbreviation",
    "^<C\\-\\^>$": "toggle use of |:lmap| mappings",
    "^<C\\-_>$": "When 'allowrevins' set: change language(Hebrew, Farsi) {only when compiled withthe |+rightleft| feature}",
    "^0<C\\-D>$": "delete all indent in the current line",
    "^\\^<C\\-D>$": "delete all indent in the current line, restoreit in the next line",
    "^<Del>$": "delete character under the cursor",
    "^<Left>$": "cursor one character left",
    "^<S-Left>$": "cursor one word left",
    "^<C-Left>$": "cursor one word left",
    "^<Right>$": "cursor one character right",
    "^<S-Right>$": "cursor one word right",
    "^<C-Right>$": "cursor one word right",
    "^<Up>$": "cursor one line up",
    "^<S-Up>$": "same as <PageUp>",
    "^<Down>$": "cursor one line down",
    "^<S-Down>$": "same as <PageDown>",
    "^<Home>$": "cursor to start of line",
    "^<C-Home>$": "cursor to start of file",
    "^<End>$": "cursor past end of line",
    "^<C-End>$": "cursor past end of file",
    "^<PageUp>$": "one screenful backward",
    "^<PageDown>$": "one screenful forward",
    "^<F1>$": "same as <Help>",
    "^<Help>$": "stop insert mode and display help window",
    "^<Insert>$": "toggle Insert/Replace mode",
    "^<LeftMouse>$": "cursor at mouse click",
    "^<ScrollWheelDown>$": "move window three lines down",
    "^<S-ScrollWheelDown>$": "move window one page down",
    "^<ScrollWheelUp>$": "move window three lines up",
    "^<S-ScrollWheelUp>$": "move window one page up",
    "^<ScrollWheelLeft>$": "move window six columns left",
    "^<S-ScrollWheelLeft>$": "move window one page left",
    "^<ScrollWheelRight>$": "move window six columns right",
    "^<S-ScrollWheelRight>$": "move window one page right"
  },

  "i_CTRL-X_index": {
    "^<C\\-X><C\\-D>$": "complete defined identifiers",
    "^<C\\-X><C\\-E>$": "scroll up",
    "^<C\\-X><C\\-F>$": "complete file names",
    "^<C\\-X><C\\-I>$": "complete identifiers",
    "^<C\\-X><C\\-K>$": "complete identifiers from dictionary",
    "^<C\\-X><C\\-L>$": "complete whole lines",
    "^<C\\-X><C\\-N>$": "next completion",
    "^<C\\-X><C\\-O>$": "omni completion",
    "^<C\\-X><C\\-P>$": "previous completion",
    "^<C\\-X><C\\-S>$": "spelling suggestions",
    "^<C\\-X><C\\-T>$": "complete identifiers from thesaurus",
    "^<C\\-X><C\\-Y>$": "scroll down",
    "^<C\\-X><C\\-U>$": "complete with 'completefunc'",
    "^<C\\-X><C\\-V>$": "complete like in : command line",
    "^<C\\-X><C\\-]>$": "complete tags",
    "^<C\\-X>s$": "spelling suggestions"
  },

  "normal-index": {
    "^<C\\-A>$": "2 add N to number at/after cursor",
    "^<C\\-B>$": "1 scroll N screens Backwards",
    "^<C\\-C>$": "interrupt current (search) command",
    "^<C\\-D>$": "scroll Down N lines (default: half a screen)",
    "^<C\\-E>$": "scroll N lines upwards (N lines Extra)",
    "^<C\\-F>$": "1 scroll N screens Forward",
    "^<C\\-G>$": "display current file name and position",
    "^<BS>$": "1 same as \"h\"",
    "^<C\\-H>$": "1 same as \"h\"",
    "^<Tab>$": "1 go to N newer entry in jump list",
    "^<C\\-I>$": "1 same as <Tab>",
    "^<NL>$": "1 same as \"j\"",
    "^<C\\-J>$": "1 same as \"j\"",
    "^<C\\-K>$": "not used",
    "^<C\\-L>$": "redraw screen",
    "^<CR>$": "1 cursor to the first CHAR N lines lower",
    "^<C\\-M>$": "1 same as <CR>",
    "^<C\\-N>$": "1 same as \"j\"",
    "^<C\\-O>$": "1 go to N older entry in jump list",
    "^<C\\-P>$": "1 same as \"k\"",
    "^<C\\-Q>$": "(used for terminal control flow)",
    "^<C\\-R>$": "2 redo changes which were undone with 'u'",
    "^<C\\-S>$": "(used for terminal control flow)",
    "^<C\\-T>$": "jump to N older Tag in tag list",
    "^<C\\-U>$": "scroll N lines Upwards (default: half a   screen)",
    "^<C\\-V>$": "start blockwise Visual mode",
    "^<C\\-W>(\\w)$": "window commands, see |CTRL-W|",
    "^<C\\-X>$": "subtract N from number at/after cursor",
    "^<C\\-Y>$": "scroll N lines downwards",
    "^<C\\-Z>$": "suspend program (or start new shell)",
    "^<C\\-\\[><Esc>$": "not used",
    "^<C\\-\\\\><C\\-N>$": "go to Normal mode (no-op)",
    "^<C\\-\\\\><C\\-G>$": "go to mode specified with 'insertmode'",
    "^<C\\-\\\\>([a-z])$": "reserved for extensions",
    "^<C\\-\\\\>$": "Others not used",
    "^<C\\-\\]>$": ":ta to ident under cursor",
    "^<C\\-\\^>$": "edit Nth alternate file equivalent to\":e #N\")",
    "^<C\\-_>$": "not used",
    "^<Space>$": "1 same as \"l\"",
    "^!{motion}{filter}$": "2 filter Nmove text through the {filter} command",
    "^!!{filter}$": "2 filter N lines through the {filter} command",
    "^\"([a-zA-Z0-9\\.%#:\\-\"])$": "use register {a-zA-Z0-9.%#:-\"} for next delete, yank or put (uppercase to append) ({.%#:} only work with put)",
    "^#$": "1 search backward for the Nth occurrence of the ident under the cursor",
    "^\\$$": "1 cursor to the end of Nth next line",
    "^%$": "1 find the next (curly/square) bracket on this line and go to its match, or go to matching comment bracket, or go to matching preprocessor directive.",
    "^(d+)%$": "1 go to N percentage in the file",
    "^&$": "2 repeat last :s",
    "^'([a-zA-Z0-9])$": "1 cursor to the first CHAR on the line with mark {a-zA-Z0-9}",
    "^''$": "1 cursor to the first CHAR of the line where the cursor was before the latest jump.",
    "^'\\($": "1 cursor to the first CHAR on the line of the start of the current sentence",
    "^'\\)$": "1 cursor to the first CHAR on the line of the end of the current sentence",
    "^'<$": "1 cursor to the first CHAR of the line where highlighted area starts/started in the current buffer.",
    "^'>$": "1 cursor to the first CHAR of the line where highlighted area ends/ended in the current buffer.",
    "^'\\[$": "1 cursor to the first CHAR on the line of the start of last operated text or start of put text",
    "^']$": "1 cursor to the first CHAR on the line of the end of last operated text or end of put text",
    "^'{$": "1 cursor to the first CHAR on the line of the start of the current paragraph",
    "^'}$": "1 cursor to the first CHAR on the line of the end of the current paragraph",
    "^\\($": "1 cursor N sentences backward",
    "^\\)$": "1 cursor N sentences forward",
    "^\\*$": "1 search forward for the Nth occurrence of the ident under the cursor",
    "^\\+$": "1 same as <CR>",
    "^,$": "1 repeat latest f, t, F or T in opposite direction N times",
    "^-$": "1 cursor to the first CHAR N lines higher",
    "^\\.$": "2 repeat last change with count replaced with N",
    "^/{pattern}<CR>$": "1 search forward for the Nth occurrence of   {pattern}",
    "^/<CR>$": "1 search forward for {pattern} of last search",
    "^0$": "1 cursor to the first char of the line",
    "^1$": "prepend to command to give a count",
    "^2$": "\"",
    "^3$": "\"",
    "^4$": "\"",
    "^5$": "\"",
    "^6$": "\"",
    "^7$": "\"",
    "^8$": "\"",
    "^9$": "\"",
    "^:$": "1 start entering an Ex command",
    "^(d+):$": "start entering an Ex command with range from current line to N-1 lines down",
    "^;$": "1 repeat latest f, t, F or T N times",
    "^<{motion}$": "2 shift Nmove lines one 'shiftwidth'   leftwards",
    "^<<$": "2 shift N lines one 'shiftwidth' leftwards",
    "^={motion}$": "2 filter Nmove lines through \"indent\"",
    "^==$": "2 filter N lines through \"indent\"",
    "^>{motion}$": "2 shift Nmove lines one 'shiftwidth'   rightwards",
    "^>>$": "2 shift N lines one 'shiftwidth' rightwards",
    "^\\?{pattern}<CR>$": "1 search backward for the Nth previous occurrence of {pattern}",
    "^\\?<CR>$": "1 search backward for {pattern} of last search",
    "^@([a-z])$": "2 execute the contents of register {a-z}   N times",
    "^@:$":"repeat the previous \":\" command N times",
    "^@@$": "2 repeat the previous @{a-z} N times",
    "^A$": "2 append text after the end of the line N times",
    "^B$": "1 cursor N WORDS backward",
    "^([0-9a-zA-Z\"])C$": "2 change from the cursor position to the end of the line, and N-1 more lines [into buffer x]; synonym for \"c$\"",
    "^([0-9a-zA-Z\"])D$": "2 delete the characters under the cursor until the end of the line and N-1 more lines [into buffer x]; synonym for \"d$\"",
    "^E$": "1 cursor forward to the end of WORD N",
    "^F(\\w)$": "1 cursor to the Nth occurrence of {char} to the left",
    "^G$": "1 cursor to line N, default last line",
    "^H$": "1 cursor to line N from top of screen",
    "^I$": "2 insert text before the first CHAR on the line N times",
    "^J$": "2 Join N lines; default is 2",
    "^K$": "lookup Keyword under the cursor with   'keywordprg'",
    "^L$": "1 cursor to line N from bottom of screen",
    "^M$": "1 cursor to middle line of screen",
    "^N$": "1 repeat the latest '/' or '?' N times in opposite direction",
    "^O$": "2 begin a new line above the cursor and insert text, repeat N times",
    "^([0-9a-zA-Z\"])P$": "2 put the text [from buffer x] before the cursor N times",
    "^Q$": "switch to \"Ex\" mode",
    "^R$": "2 enter replace mode: overtype existing characters, repeat the entered text N-1 times",
    "^([0-9a-zA-Z\"])S$": "2 delete N lines [into buffer x] and start insert; synonym for \"cc\".",
    "^T(\\w)$": "1 cursor till after Nth occurrence of {char}   to the left",
    "^U$": "2 undo all latest changes on one line",
    "^V$": "start linewise Visual mode",
    "^W$": "1 cursor N WORDS forward",
    "^([0-9a-zA-Z\"])X$": "2 delete N characters before the cursor [into buffer x]",
    "^([0-9a-zA-Z\"])Y$": "yank N lines [into buffer x]; synonym for   \"yy\"",
    "^ZZ$": "store current file if modified, and exit",
    "^ZQ$": "exit current file always",
    "^\\[(\\w)$": "square bracket command (see |[| below)",
    "^\\\\$": "not used",
    "^](\\w)$": "square bracket command (see |]| below)",
    "^\\^$": "1 cursor to the first CHAR of the line",
    "^_$": "1 cursor to the first CHAR N - 1 lines lower",
    "^`([a-zA-Z0-9])$": "1 cursor to the mark {a-zA-Z0-9}",
    "^`\\($": "1 cursor to the start of the current sentence",
    "^`\\)$": "1 cursor to the end of the current sentence",
    "^`<$": "1 cursor to the start of the highlighted area",
    "^`>$": "1 cursor to the end of the highlighted area",
    "^`\\[$": "1 cursor to the start of last operated text or start of putted text",
    "^`]$": "1 cursor to the end of last operated text or end of putted text",
    "^``$": "1 cursor to the position before latest jump",
    "^`{$": "1 cursor to the start of the current paragraph",
    "^`}$": "1 cursor to the end of the current paragraph",
    "^a$": "2 append text after the cursor N times",
    "^b$": "1 cursor N words backward",
    "^([0-9a-zA-Z\"])c{motion}$": "2 delete Nmove text [into buffer x] and start insert",
    "^([0-9a-zA-Z\"])cc$": "2 delete N lines [into buffer x] and start insert",
    "^([0-9a-zA-Z\"])d{motion}$": "2 delete Nmove text [into buffer x]",
    "^([0-9a-zA-Z\"])dd$": "2 delete N lines [into buffer x]",
    "^do$":"same as \":diffget\"",
    "^dp$":"same as \":diffput\"",
    "^e$": "1 cursor forward to the end of word N",
    "^f(\\w)$": "1 cursor to Nth occurrence of {char} to the right",
    "^g(\\w)$": "extended commands, see |g| below",
    "^h$": "1 cursor N chars to the left",
    "^i$": "2 insert text before the cursor N times",
    "^j$": "1 cursor N lines downward",
    "^k$": "1 cursor N lines upward",
    "^l$": "1 cursor N chars to the right",
    "^m([A-Za-z])$": "set mark {A-Za-z} at cursor position",
    "^n$": "1 repeat the latest '/' or '?' N times",
    "^o$": "2 begin a new line below the cursor and insert text, repeat N times",
    "^([0-9a-zA-Z\"])p$": "2 put the text [from register x] after the cursor N times",
    "^q([0-9a-zA-Z\"])$": "record typed characters into named register   {0-9a-zA-Z\"} (uppercase to append)",
    "^q$": "(while recording) stops recording",
    "^q:$": "edit : command-line in command-line window",
    "^q/$": "edit / command-line in command-line window",
    "^q\\?$": "edit ? command-line in command-line window",
    "^r(\\w)$": "2 replace N chars with {char}",
    "^([0-9a-zA-Z\"])s$": "2  (substitute) delete N characters [into buffer x] and start insert",
    "^t(\\w)$": "1 cursor till before Nth occurrence of {char}   to the right",
    "^u$": "2 undo changes",
    "^v$": "start characterwise Visual mode",
    "^w$": "1 cursor N words forward",
    "^([0-9a-zA-Z\"])x$": "2 delete N characters under and after the cursor [into buffer x]",
    "^([0-9a-zA-Z\"])y{motion}$": "yank Nmove text [into buffer x]",
    "^([0-9a-zA-Z\"])yy$": "yank N lines [into buffer x]",
    "^z(\\w)$": "commands starting with 'z', see |z| below",
    "^{$": "1 cursor N paragraphs backward",
    "^\\|$": "1 cursor to column N",
    "^}$": "1 cursor N paragraphs forward",
    "^~$": "2  'tildeop' off: switch case of N characters under cursor and move the cursor N   characters to the right",
    "^~{motion}$": "'tildeop' on: switch case of Nmove text",
    "^<C-End>$": "1 same as \"G\"",
    "^<C-Home>$": "1 same as \"gg\"",
    "^<C-Left>$": "1 same as \"b\"",
    "^<C-LeftMouse>$":"\":ta\" to the keyword at the mouse click",
    "^<C-Right>$": "1 same as \"w\"",
    "^<C-RightMouse>$": "same as \"CTRL-T\"",
    "^([0-9a-zA-Z\"])<Del>$": "2 same as \"x\"",
    "^(d+)<Del>$": "remove the last digit from {count}",
    "^<Down>$": "1 same as \"j\"",
    "^<End>$": "1 same as \"$\"",
    "^<F1>$": "same as <Help>",
    "^<Help>$": "open a help window",
    "^<Home>$": "1 same as \"0\"",
    "^<Insert>$": "2 same as \"i\"",
    "^<Left>$": "1 same as \"h\"",
    "^<LeftMouse>$": "1 move cursor to the mouse click position",
    "^<MiddleMouse>$": "2 same as \"gP\"at the mouse click position",
    "^<PageDown>$": "same as CTRL-F",
    "^<PageUp>$": "same as CTRL-B",
    "^<Right>$": "1 same as \"l\"",
    "^<RightMouse>$": "start Visual mode, move cursor to the mouse click position",
    "^<S-Down>$": "1 same as CTRL-F",
    "^<S-Left>$": "1 same as \"b\"",
    "^<S-LeftMouse>$": "same as \"*\" at the mouse click position",
    "^<S-Right>$": "1 same as \"w\"",
    "^<S-RightMouse>$": "same as \"#\" at the mouse click position",
    "^<S-Up>$": "1 same as CTRL-B",
    "^<Undo>$": "2 same as \"u\"",
    "^<Up>$": "1 same as \"k\"",
    "^<ScrollWheelDown>$": "move window three lines down",
    "^<S-ScrollWheelDown>$": "move window one page down",
    "^<ScrollWheelUp>$": "move window three lines up",
    "^<S-ScrollWheelUp>$": "move window one page up",
    "^<ScrollWheelLeft>$": "move window six columns left",
    "^<S-ScrollWheelLeft>$": "move window one page left",
    "^<ScrollWheelRight>$": "move window six columns right",
    "^<S-ScrollWheelRight>$": "move window one page right"
  },

  "objects": {
    "^a\"$": "double quoted string",
    "^a'$": "single quoted string",
    "^a($": "same as ab",
    "^a)$": "same as ab",
    "^a<$": "\"a <>\" from '<' to the matching '>'",
    "^a>$": "same as a<",
    "^aB$": "\"a Block\" from \"[{\" to \"]}\" (with brackets)",
    "^aW$": "\"a WORD\" (with white space)",
    "^a[$": "\"a []\" from '[' to the matching ']'",
    "^a]$": "same as a[",
    "^a`$": "string in backticks",
    "^ab$": "\"a block\" from \"[(\" to \"])\" (with braces)",
    "^ap$": "\"a paragraph\" (with white space)",
    "^as$": "\"a sentence\" (with white space)",
    "^at$": "\"a tag block\" (with white space)",
    "^aw$": "\"a word\" (with white space)",
    "^a{$": "same as aB",
    "^a}$": "same as aB",
    "^i\"$": "double quoted string without the quotes",
    "^i'$": "single quoted string without the quotes",
    "^i($": "same as ib",
    "^i)$": "same as ib",
    "^i<$": "\"inner <>\" from '<' to the matching '>'",
    "^i>$": "same as i<",
    "^iB$": "\"inner Block\" from \"[{\" and \"]}\"",
    "^iW$": "\"inner WORD\"",
    "^i[$": "\"inner []\" from '[' to the matching ']'",
    "^i]$": "same as i[",
    "^i`$": "string in backticks without the backticks",
    "^ib$": "\"inner block\" from \"[(\" to \"])\"",
    "^ip$": "\"inner paragraph\"",
    "^is$": "\"inner sentence\"",
    "^it$": "\"inner tag block\"",
    "^iw$": "\"inner word\"",
    "^i{$": "same as iB",
    "^i}$": "same as iB"
  },

  "CTRL-W": {
    "^<C\\-W><C\\-B>$": "same as \"CTRL-W b\"",
    "^<C\\-W><C\\-C>$": "same as \"CTRL-W c\"",
    "^<C\\-W><C\\-D>$": "same as \"CTRL-W d\"",
    "^<C\\-W><C\\-F>$": "same as \"CTRL-W f\"CTRL-W CTRL-G same as \"CTRL-W g ..\"",
    "^<C\\-W><C\\-H>$": "same as \"CTRL-W h\"",
    "^<C\\-W><C\\-I>$": "same as \"CTRL-W i\"",
    "^<C\\-W><C\\-J>$": "same as \"CTRL-W j\"",
    "^<C\\-W><C\\-K>$": "same as \"CTRL-W k\"",
    "^<C\\-W><C\\-L>$": "same as \"CTRL-W l\"",
    "^<C\\-W><C\\-N>$": "same as \"CTRL-W n\"",
    "^<C\\-W><C\\-O>$": "same as \"CTRL-W o\"",
    "^<C\\-W><C\\-P>$": "same as \"CTRL-W p\"",
    "^<C\\-W><C\\-Q>$": "same as \"CTRL-W q\"",
    "^<C\\-W><C\\-R>$": "same as \"CTRL-W r\"",
    "^<C\\-W><C\\-S>$": "same as \"CTRL-W s\"",
    "^<C\\-W><C\\-T>$": "same as \"CTRL-W t\"",
    "^<C\\-W><C\\-V>$": "same as \"CTRL-W v\"",
    "^<C\\-W><C\\-W>$": "same as \"CTRL-W w\"",
    "^<C\\-W><C\\-X>$": "same as \"CTRL-W x\"",
    "^<C\\-W><C\\-Z>$": "same as \"CTRL-W z\"",
    "^<C\\-W><C\\-]>$": "same as \"CTRL-W ]\"",
    "^<C\\-W><C\\-\\^>$": "same as \"CTRL-W ^\"",
    "^<C\\-W><C\\-_>$": "same as \"CTRL-W _\"",
    "^<C\\-W>+$": "increase current window height N lines",
    "^<C\\-W>-$": "decrease current window height N lines",
    "^<C\\-W><$": "decrease current window width N columns",
    "^<C\\-W>=$": "make all windows the same height & width",
    "^<C\\-W>>$": "increase current window width N columns",
    "^<C\\-W>H$": "move current window to the far left",
    "^<C\\-W>J$": "move current window to the very bottom",
    "^<C\\-W>K$": "move current window to the very top",
    "^<C\\-W>L$": "move current window to the far right",
    "^<C\\-W>P$": "go to preview window",
    "^<C\\-W>R$": "rotate windows upwards N times",
    "^<C\\-W>S$": "same as \"CTRL-W s\"",
    "^<C\\-W>T$": "move current window to a new tab page",
    "^<C\\-W>W$": "go to N previous window (wrap around)",
    "^<C\\-W>]$": "split window and jump to tag under cursor",
    "^<C\\-W>\\^$": "split current window and edit alternate file N",
    "^<C\\-W>_$": "set current window height to N (default:   very high)",
    "^<C\\-W>b$": "go to bottom window",
    "^<C\\-W>c$": "close current window (like |:close|)",
    "^<C\\-W>d$": "split window and jump to definition under the cursor",
    "^<C\\-W>f$": "split window and edit file name under the cursor",
    "^<C\\-W>F$": "split window and edit file name under the cursor and jump to the line number following the file name.",
    "^<C\\-W>g<C\\-]>$": "split window and do |:tjump| to tag under cursor",
    "^<C\\-W>g]$": "split window and do |:tselect| for tag under cursor",
    "^<C\\-W>g}$": "do a |:ptjump| to the tag under the cursor",
    "^<C\\-W>gf$": "edit file name under the cursor in a new tab page",
    "^<C\\-W>gF$": "edit file name under the cursor in a new tab page and jump to the line number following the file name.",
    "^<C\\-W>h$": "go to Nth left window (stop at first window)",
    "^<C\\-W>i$": "split window and jump to declaration of identifier under the cursor",
    "^<C\\-W>j$": "go N windows down (stop at last window)",
    "^<C\\-W>k$": "go N windows up (stop at first window)",
    "^<C\\-W>l$": "go to Nth right window (stop at last window)",
    "^<C\\-W>n$": "open new window, N lines high",
    "^<C\\-W>o$": "close all but current window (like |:only|)",
    "^<C\\-W>p$": "go to previous (last accessed) window",
    "^<C\\-W>q$": "quit current window (like |:quit|)",
    "^<C\\-W>r$": "rotate windows downwards N times",
    "^<C\\-W>s$": "split current window in two parts, new window N lines high",
    "^<C\\-W>t$": "go to top window",
    "^<C\\-W>v$": "split current window vertically, new window N columns wide",
    "^<C\\-W>w$": "go to N next window (wrap around)",
    "^<C\\-W>x$": "exchange current window with window N   (default: next window)",
    "^<C\\-W>z$": "close preview window",
    "^<C\\-W>|$": "set window width to N columns",
    "^<C\\-W>}$": "show tag under cursor in preview window",
    "^<C\\-W><Down>$": "same as \"CTRL-W j\"",
    "^<C\\-W><Up>$": "same as \"CTRL-W k\"",
    "^<C\\-W><Left>$": "same as \"CTRL-W h\"",
    "^<C\\-W><Right>$": "same as \"CTRL-W l\""
  },

  "[ ]": {
    "^[<C\\-D>$": "jump to first #define found in current and included files matching the word under the cursor, start searching at beginning of current file",
    "^[<C\\-I>$": "jump to first line in current and included files that contains the word under the cursor, start searching at beginning of current file",
    "^[#$": "1 cursor to N previous unmatched #if, #else or #ifdef",
    "^['$": "1 cursor to previous lowercase mark, on first non-blank",
    "^[($": "1 cursor N times back to unmatched '('",
    "^[*$": "1 same as \"[/\"",
    "^[`$": "1 cursor to previous lowercase mark",
    "^[/$": "1 cursor to N previous start of a C comment",
    "^[D$": "list all defines found in current and included files matching the word under the cursor, start searching at beginning of current file",
    "^[I$": "list all lines found in current and included files that contain the word under the cursor, start searching at beginning of current file",
    "^[P$": "2 same as \"[p\"",
    "^[[$": "1 cursor N sections backward",
    "^[]$": "1 cursor N SECTIONS backward",
    "^[c$": "1 cursor N times backwards to start of change",
    "^[d$": "show first #define found in current and included files matching the word under the cursor, start searching at beginning of current file",
    "^[f$": "same as \"gf\"",
    "^[i$": "show first line found in current and included files that contains the word under the cursor, start searching at beginning of current file",
    "^[m$": "1 cursor N times back to start of member function",
    "^[p$": "2 like \"P\", but adjust indent to current line",
    "^[s$": "1 move to the previous misspelled word",
    "^[z$": "1 move to start of open fold",
    "^[{$": "1 cursor N times back to unmatched '{'",
    "^[<MiddleMouse>$": "2 same as \"[p\"",
    "^]<C\\-D>$": "jump to first #define found in current and included files matching the word under the cursor, start searching at cursor position",
    "^]<C\\-I>$": "jump to first line in current and included files that contains the word under the cursor, start searching at cursor position",
    "^]#$": "1 cursor to N next unmatched #endif or #else",
    "^]'$": "1 cursor to next lowercase mark, on first non-blank",
    "^])$": "1 cursor N times forward to unmatched ')'",
    "^]*$": "1 same as \"]/\"",
    "^]`$": "1 cursor to next lowercase mark",
    "^]/$": "1 cursor to N next end of a C comment",
    "^]D$": "list all #defines found in current and included files matching the word under the cursor, start searching at cursor position",
    "^]I$": "list all lines found in current and included files that contain the word under the cursor, start searching at cursor position",
    "^]P$": "2 same as \"[p\"",
    "^][$": "1 cursor N SECTIONS forward",
    "^]]$": "1 cursor N sections forward",
    "^]c$": "1 cursor N times forward to start of change",
    "^]d$": "show first #define found in current and included files matching the word under the cursor, start searching at cursor position",
    "^]f$": "same as \"gf\"",
    "^]i$": "show first line found in current and included files that contains the word under the cursor, start searching at cursor position",
    "^]m$": "1 cursor N times forward to end of member function",
    "^]p$": "2 like \"p\", but adjust indent to current line",
    "^]s$": "1 move to next misspelled word",
    "^]z$": "1 move to end of open fold",
    "^]}$": "1 cursor N times forward to unmatched '}'",
    "^]<MiddleMouse>$": "2 same as \"]p\""
  },

  "g": {
    "^g<C\\-A>$": "only when compiled with MEM_PROFILE defined: dump a memory profile",
    "^g<C\\-G>$": "show information about current cursor position",
    "^g<C\\-H>$": "start Select block mode",
    "^g<C\\-]>$": "|:tjump| to the tag under the cursor",
    "^g#$": "1 like \"#\", but without using \"\\<\"and \"\\>\"",
    "^g\\$$": "1 when 'wrap' off go to rightmost character of the current line that is on the screen;   when 'wrap' on go to the rightmost character of the current screen line",
    "^g&":"repeat last \":s\"on all lines",
    "^g'{mark}$": "1 like |'| but without changing the jumplist",
    "^g`{mark}$": "1 like |`| but without changing the jumplist",
    "^g*$": "1 like \"*\", but without using \"\\<\"and \"\\>\"",
    "^g+$": "go to newer text state N times",
    "^g,$": "1 go to N newer position in change list",
    "^g-$": "go to older text state N times",
    "^g0$": "1 when 'wrap' off go to leftmost character of the current line that is on the screen;   when 'wrap' on go to the leftmost character of the current screen line",
    "^g8$": "print hex value of bytes used in UTF-8 character under the cursor",
    "^g;$": "1 go to N older position in change list",
    "^g<$": "display previous command output",
    "^g\\?$": "2 Rot13 encoding operator",
    "^g\\?\\?$": "2 Rot13 encode current line",
    "^g\\?g\\?$": "2 Rot13 encode current line",
    "^gD$": "1 go to definition of word under the cursor in current file",
    "^gE$": "1 go backwards to the end of the previous WORD",
    "^gH$": "start Select line mode",
    "^gI$": "2 like \"I\", but always start in column 1",
    "^gJ$": "2 join lines without inserting space",
    "^gN$": "1,2 find the previous match with the last used search pattern and Visually select it",
    "^([0-9a-zA-Z\"])gP$": "2 put the text [from register x] before the cursor N times, leave the cursor after it",
    "^gQ$": "switch to \"Ex\" mode with Vim editing",
    "^gR$": "2 enter Virtual Replace mode",
    "^gT$": "go to the previous tab page",
    "^gU{motion}$": "2 make Nmove text uppercase",
    "^gV$": "don't reselect the previous Visual area when executing a mapping or menu in Select mode",
    "^g]$": ":t select on the tag under the cursor",
    "^g\\^$": "1 when 'wrap' off go to leftmost non-white character of the current line that is on the screen; when 'wrap' on go to the leftmost non-white character of the current screen line",
    "^g_$": "1 cursor to the last CHAR N - 1 lines lower",
    "^ga$": "print ascii value of character under the cursor",
    "^gd$": "1 go to definition of word under the cursor in current function",
    "^ge$": "1 go backwards to the end of the previous word",
    "^gf$": "start editing the file whose name is under the cursor",
    "^gF$": "start editing the file whose name is under the cursor and jump to the line number following the filename.",
    "^gg$": "1 cursor to line N, default first line",
    "^gh$": "start Select mode",
    "^gi$": "2 like \"i\", but first move to the |'^| mark",
    "^gj$": "1 like \"j\", but when 'wrap' on go N screen lines down",
    "^gk$": "1 like \"k\", but when 'wrap' on go N screen lines up",
    "^gn$": "1,2 find the next match with the last used search pattern and Visually select it",
    "^gm$": "1 go to character at middle of the screenline",
    "^go$": "1 cursor to byte N in the buffer",
    "^([0-9a-zA-Z\"])gp$": "2 put the text [from register x] after the cursor N times, leave the cursor after it",
    "^gq{motion}$": "2 format Nmove text",
    "^gr(\\w)$": "2 virtual replace N chars with {char}",
    "^gs$": "go to sleep for N seconds (default 1)",
    "^gt$": "go to the next tab page",
    "^gu{motion}$": "2 make Nmove text lowercase",
    "^gv$": "reselect the previous Visual area",
    "^gw{motion}$": "2 format Nmove text and keep cursor",
    "^gx$": "execute application for file name under the cursor (only with |netrw| plugin)",
    "^g@{motion}$": "call 'operatorfunc'",
    "^g~{motion}$": "2 swap case for Nmove text",
    "^g<Down>$": "1 same as \"gj\"",
    "^g<End>$": "1 same as \"g$\"",
    "^g<Home>$": "1 same as \"g0\"",
    "^g<LeftMouse>$": "same as <C-LeftMouse>",
    "^g<MiddleMouse>$": "same as <C-MiddleMouse>",
    "^g<RightMouse>$": "same as <C-RightMouse>",
    "^g<Up>$": "1 same as \"gk\""
  },

  "z": {
    "^z<CR>$": "redraw, cursor line to top of window,   cursor on first non-blank",
    "^z{height}<CR>$": "redraw, make window {height} lines high",
    "^z+$": "cursor on line N (default line below window), otherwise like \"z<CR>\"",
    "^z-$": "redraw, cursor line at bottom of window,   cursor on first non-blank",
    "^z\\.$": "redraw, cursor line to center of window,   cursor on first non-blank",
    "^z=$": "give spelling suggestions",
    "^zA$": "open a closed fold or close an open fold recursively",
    "^zC$": "close folds recursively",
    "^zD$": "delete folds recursively",
    "^zE$": "eliminate all folds",
    "^zF$": "create a fold for N lines",
    "^zG$": "mark word as good spelled word",
    "^zH$": "when 'wrap' off scroll half a screenwidth to the right",
    "^zL$": "when 'wrap' off scroll half a screenwidth to the left",
    "^zM$": "set 'foldlevel' to zero",
    "^zN$": "set 'foldenable'",
    "^zO$": "open folds recursively",
    "^zR$": "set 'foldlevel' to the deepest fold",
    "^zW$": "mark word as wrong (bad) spelled word",
    "^zX$": "re-apply 'foldlevel'",
    "^z^$": "cursor on line N (default line above window), otherwise like \"z-\"",
    "^za$": "open a closed fold, close an open fold",
    "^zb$": "redraw, cursor line at bottom of window",
    "^zc$": "close a fold",
    "^zd$": "delete a fold",
    "^ze$": "when 'wrap' off scroll horizontally to position the cursor at the end (right side)   of the screen",
    "^zf{motion}$": "create a fold for Nmove text",
    "^zg$": "mark word as good spelled word",
    "^zh$": "when 'wrap' off scroll screen N characters to the right",
    "^zi$": "toggle 'foldenable'",
    "^zj$": "1 move to the start of the next fold",
    "^zk$": "1 move to the end of the previous fold",
    "^zl$": "when 'wrap' off scroll screen N characters to the left",
    "^zm$": "subtract one from 'foldlevel'",
    "^zn$": "reset 'foldenable'",
    "^zo$": "open fold",
    "^zr$": "add one to 'foldlevel'",
    "^zs$": "when 'wrap' off scroll horizontally to position the cursor at the start (left side) of the screen",
    "^zt$": "redraw, cursor line at top of window",
    "^zv$": "open enough folds to view the cursor line",
    "^zw$": "mark word as wrong (bad) spelled word",
    "^zx$": "re-apply 'foldlevel' and do \"zv\"",
    "^zz$": "redraw, cursor line at center of window",
    "^z<Left>$": "same as \"zh\"",
    "^z<Right>$": "same as \"zl\""
  },

  "visual-index": {
    "^<C\\-\\\\><C\\-N>$": "stop Visual mode",
    "^<C\\-\\\\><C\\-G>$": "go to mode specified with 'insertmode'",
    "^<C\\-C>$": "stop Visual mode",
    "^<C\\-G>$": "toggle between Visual mode and Select mode",
    "^<BS>$": "2 Select mode: delete highlighted area",
    "^<C\\-H>$": "2 same as <BS>",
    "^<C\\-O>$": "switch from Select to Visual mode for one command",
    "^<C\\-V>$": "make Visual mode blockwise or stop Visual mode",
    "^<Esc>$": "stop Visual mode",
    "^<C\\-]>$": "jump to highlighted tag",
    "^!{filter}$": "2 filter the highlighted lines through the external command {filter}",
    "^:$": "start a command-line with the highlighted lines as a range",
    "^<$": "2 shift the highlighted lines one   'shiftwidth' left",
    "^=$": "2 filter the highlighted lines through the external program given with the 'equalprg'   option",
    "^>$": "2 shift the highlighted lines one   'shiftwidth' right",
    "^A$": "2 block mode: append same text in all lines,   after the highlighted area",
    "^C$": "2 delete the highlighted lines and start insert",
    "^D$": "2 delete the highlighted lines",
    "^I$": "2 block mode: insert same text in all lines,   before the highlighted area",
    "^J$": "2 join the highlighted lines",
    "^K$": "run 'keywordprg' on the highlighted area",
    "^O$": "Move horizontally to other corner of area.Q does not start Ex mode",
    "^R$": "2 delete the highlighted lines and start insert",
    "^S$": "2 delete the highlighted lines and start insert",
    "^U$": "2 make highlighted area uppercase",
    "^V$": "make Visual mode linewise or stop Visual mode",
    "^X$": "2 delete the highlighted lines",
    "^Y$": "yank the highlighted lines",
    "^a\"$": "extend highlighted area with a double quoted string",
    "^a'$": "extend highlighted area with a single quoted string",
    "^a($": "same as ab",
    "^a)$": "same as ab",
    "^a<$": "extend highlighted area with a <> block",
    "^a>$": "same as a<",
    "^aB$": "extend highlighted area with a {} block",
    "^aW$": "extend highlighted area with \"a WORD\"",
    "^a[$": "extend highlighted area with a [] block",
    "^a]$": "same as a[",
    "^a`$": "extend highlighted area with a backtick quoted string",
    "^ab$": "extend highlighted area with a () block",
    "^ap$": "extend highlighted area with a paragraph",
    "^as$": "extend highlighted area with a sentence",
    "^at$": "extend highlighted area with a tag block",
    "^aw$": "extend highlighted area with \"a word\"",
    "^a{$": "same as aB",
    "^a}$": "same as aB",
    "^c$": "2 delete highlighted area and start insert",
    "^d$": "2 delete highlighted area",
    "^gJ$": "2 join the highlighted lines without inserting spaces",
    "^gq$": "2 format the highlighted lines",
    "^gv$": "exchange current and previous highlighted area",
    "^i\"$": "extend highlighted area with a double quoted string (without quotes)",
    "^i'$": "extend highlighted area with a single quoted string (without quotes)",
    "^i($": "same as ib",
    "^i)$": "same as ib",
    "^i<$": "extend highlighted area with inner <> block",
    "^i>$": "same as i<",
    "^iB$": "extend highlighted area with inner {} block",
    "^iW$": "extend highlighted area with \"inner WORD\"",
    "^i[$": "extend highlighted area with inner [] block",
    "^i]$": "same as i[",
    "^i`$": "extend highlighted area with a backtick quoted string (without the backticks)",
    "^ib$": "extend highlighted area with inner () block",
    "^ip$": "extend highlighted area with inner paragraph",
    "^is$": "extend highlighted area with inner sentence",
    "^it$": "extend highlighted area with inner tag block",
    "^iw$": "extend highlighted area with \"inner word\"",
    "^i{$": "same as iB",
    "^i}$": "same as iB",
    "^o$": "move cursor to other corner of area",
    "^r$": "2 delete highlighted area and start insert",
    "^s$": "2 delete highlighted area and start insert",
    "^u$": "2 make highlighted area lowercase",
    "^v$": "make Visual mode characterwise or stop Visual mode",
    "^x$": "2 delete the highlighted area",
    "^y$": "yank the highlighted area",
    "^~$": "2 swap case for the highlighted area"
  },

  "ex-edit-index": {
    "^<C\\-A>$": "do completion on the pattern in front of thecursor and insert all matches",
    "^<C\\-B>$": "cursor to begin of command-line",
    "^<C\\-C>$": "same as <Esc>",
    "^<C\\-D>$": "list completions that match the pattern infront of the cursor",
    "^<C\\-E>$": "cursor to end of command-line",
    "^<C\\-F>$": "default value for 'cedit': opens thecommand-line window; otherwise not used",
    "^<C\\-G>$": "not used",
    "^<BS>$": "delete the character in front of the cursor",
    "^(\\w)<BS>(\\w)$": "enter digraph when 'digraph' is on",
    "^<C\\-H>$": "same as <BS>",
    "^<Tab>$": "if 'wildchar' is <Tab>: Do completion onthe pattern in front of the cursor",
    "^<S-Tab>$": "same as CTRL-P",
    "^'wildchar'$": "Do completion on the pattern in front of thecursor (default: <Tab>)",
    "^<C\\-I>$": "same as <Tab>",
    "^<NL>$": "same as <CR>",
    "^<C\\-J>$": "same as <CR>",
    "^<C\\-K>(\\w)(\\w)$": "enter digraph",
    "^<C\\-L>$": "do completion on the pattern in front of thecursor and insert the longest common part",
    "^<CR>$": "execute entered command",
    "^<C\\-M>$": "same as <CR>",
    "^<C\\-N>$": "after using 'wildchar' with multiple matches:go to next match, otherwise: same as <Down>",
    "^<C\\-O>$": "not used",
    "^<C\\-P>$": "after using 'wildchar' with multiple matches:go to previous match, otherwise: same as <Up>",
    "^<C\\-Q>$": "same as CTRL-V, unless it's used for terminalcontrol flow",
    "^<C\\-R>([0-9a-z\"%#\\*:=])(<C\\-F>|<C\\-P>|<C\\-W>|<C\\-A>)$": "insert the contents of a register or objectunder the cursor as if typed",
    "^<C\\-R><C\\-R>([0-9a-z\"%#\\*:=])(<C\\-F>|<C\\-P>|<C\\-W>|<C\\-A>)$": "insert the contents of a register or object under the cursor literally",
    "^<C\\-S>$": "(used for terminal control flow)",
    "^<C\\-T>$": "not used",
    "^<C\\-U>$": "remove all characters",
    "^<C\\-V>$": "insert next non-digit literally, insert threedigit decimal number as a single byte.",
    "^<C\\-W>$": "delete the word in front of the cursor",
    "^<C\\-X>$": "not used (reserved for completion)",
    "^<C\\-Y>$": "copy (yank) modeless selection",
    "^<C\\-Z>$": "not used (reserved for suspend)",
    "^<Esc>$": "abandon command-line without executing it",
    "^<C\\-\\[>$": "same as <Esc>",
    "^<C\\-\\\\><C\\-N>$": "go to Normal mode, abandon command-line",
    "^<C\\-\\\\><C\\-G>$": "go to mode specified with 'insertmode', abandon command-line",
    "^<C\\-\\\\>([a-d)$": "reserved for extensions",
    "^<C\\-\\\\>e(.*)?$": "replace the command line with the result of {expr}",
    "^<C\\-\\\\>([f-z])$": "reserved for extensions",
    "^<C\\-\\\\>$": "Others not used",
    "^<C\\-]>$": "trigger abbreviation",
    "^<C\\-\\^>$": "toggle use of |:lmap| mappings",
    "^<C\\-_>$": "when 'allowrevins' set: change language(Hebrew, Farsi)",
    "^<Del>$": "delete the character under the cursor",
    "^<Left>$": "cursor left",
    "^<S-Left>$": "cursor one word left",
    "^<C-Left>$": "cursor one word left",
    "^<Right>$": "cursor right",
    "^<S-Right>$": "cursor one word right",
    "^<C-Right>$": "cursor one word right",
    "^<Up>$": "recall previous command-line from history thatmatches pattern in front of the cursor",
    "^<S-Up>$": "recall previous command-line from history",
    "^<Down>$": "recall next command-line from history thatmatches pattern in front of the cursor",
    "^<S-Down>$": "recall next command-line from history",
    "^<Home>$": "cursor to start of command-line",
    "^<End>$": "cursor to end of command-line",
    "^<PageDown>$": "same as <S-Down>",
    "^<PageUp>$": "same as <S-Up>",
    "^<Insert>$": "toggle insert/overstrike mode",
    "^<LeftMouse>$": "cursor at mouse click"
  },

  "ex-cmd-index* *:index": {
    "^:!$": "filter lines or execute an external command",
    "^:!!$":"repeat last \":!\"command",
    "^:#$":"same as \":number\"",
    "^:&$":"repeat last \":substitute\"",
    "^:\\*$": "execute contents of a register",
    "^:<$": "shift lines one 'shiftwidth' left",
    "^:=$": "print the cursor line number",
    "^:>$": "shift lines one 'shiftwidth' right",
    "^:@$": "execute contents of a register",
    "^:@@$":"repeat the previous \":@\"",
    "^:N(ext)?$": "go to previous file in the argument list",
    "^:P(rint)?$": "print lines",
    "^:X$": "ask for encryption key",
    "^:a(ppend)?$": "append text",
    "^:ab(breviate)?$": "enter abbreviation",
    "^:abc(lear)?$": "remove all abbreviations",
    "^:abo(veleft)?$": "make split window appear left or above",
    "^:al(l)?$": "open a window for each file in the argumentlist",
    "^:am(enu)?$": "enter new menu item for all modes",
    "^:an(oremenu)?$": "enter a new menu for all modes that will notbe remapped",
    "^:ar(gs)?$": "print the argument list",
    "^:arga(dd)?$": "add items to the argument list",
    "^:argd(elete)?$": "delete items from the argument list",
    "^:arge(dit)?$": "add item to the argument list and edit it",
    "^:argdo$": "do a command on all items in the argument list",
    "^:argg(lobal)?$": "define the global argument list",
    "^:argl(ocal)?$": "define a local argument list",
    "^:argu(ment)?$": "go to specific file in the argument list",
    "^:as(cii)?$": "print ascii value of character under the cursor",
    "^:au(tocmd)?$": "enter or show autocommands",
    "^:aug(roup)?$": "select the autocommand group to use",
    "^:aun(menu)?$": "remove menu for all modes",
    "^:b(uffer)?$": "go to specific buffer in the buffer list",
    "^:bN(ext)?$": "go to previous buffer in the buffer list",
    "^:ba(ll)?$": "open a window for each buffer in the buffer list",
    "^:bad(d)?$": "add buffer to the buffer list",
    "^:bd(elete)?$": "remove a buffer from the buffer list",
    "^:be(have)?$": "set mouse and selection behavior",
    "^:bel(owright)?$": "make split window appear right or below",
    "^:bf(irst)?$": "go to first buffer in the buffer list",
    "^:bl(ast)?$": "go to last buffer in the buffer list",
    "^:bm(odified)?$": "go to next buffer in the buffer list that hasbeen modified",
    "^:bn(ext)?$": "go to next buffer in the buffer list",
    "^:bo(tright)?$": "make split window appear at bottom or far right",
    "^:bp(revious)?$": "go to previous buffer in the buffer list",
    "^:br(ewind)?$": "go to first buffer in the buffer list",
    "^:brea(k)?$": "break out of while loop",
    "^:breaka(dd)?$": "add a debugger breakpoint",
    "^:breakd(el)?$": "delete a debugger breakpoint",
    "^:breakl(ist)?$": "list debugger breakpoints",
    "^:bro(wse)?$": "use file selection dialog",
    "^:bufdo$": "execute command in each listed buffer",
    "^:buffers$": "list all files in the buffer list",
    "^:bun(load)?$": "unload a specific buffer",
    "^:bw(ipeout)?$": "really delete a buffer",
    "^:c(hange)?$": "replace a line or series of lines",
    "^:cN(ext)?$": "go to previous error",
    "^:cNf(ile)?$": "go to last error in previous file",
    "^:ca(bbrev)?$":"like \":abbreviate\"but for Command-line mode",
    "^:cabc(lear)?$": "clear all abbreviations for Command-line mode",
    "^:cad(dbuffer)?$": "add errors from buffer",
    "^:cadde(xpr)?$": "add errors from expr",
    "^:caddf(ile)?$": "add error message to current quickfix list",
    "^:cal(l)?$": "call a function",
    "^:cat(ch)?$": "part of a :try command",
    "^:cb(uffer)?$": "parse error messages and jump to first error",
    "^:cc$": "go to specific error",
    "^:ccl(ose)?$": "close quickfix window",
    "^:cd$": "change directory",
    "^:cdo$": "execute command in each valid error list entry",
    "^:cfd(o)?$": "execute command in each file in error list",
    "^:ce(nter)?$": "format lines at the center",
    "^:cex(pr)?$": "read errors from expr and jump to first",
    "^:cf(ile)?$": "read file with error messages and jump to first",
    "^:cfir(st)?$": "go to the specified error, default first one",
    "^:cgetb(uffer)?$": "get errors from buffer",
    "^:cgete(xpr)?$": "get errors from expr",
    "^:cg(etfile)?$": "read file with error messages",
    "^:changes$": "print the change list",
    "^:chd(ir)?$": "change directory",
    "^:che(ckpath)?$": "list included files",
    "^:checkt(ime)?$": "check timestamp of loaded buffers",
    "^:cl(ist)?$": "list all errors",
    "^:cla(st)?$": "go to the specified error, default last one",
    "^:clo(se)?$": "close current window",
    "^:cm(ap)?$":"like \":map\"but for Command-line mode",
    "^:cmapc(lear)?$": "clear all mappings for Command-line mode",
    "^:cme(nu)?$": "add menu for Command-line mode",
    "^:cn(ext)?$": "go to next error",
    "^:cnew(er)?$": "go to newer error list",
    "^:cnf(ile)?$": "go to first error in next file",
    "^:cno(remap)?$":"like \":noremap\"but for Command-line mode",
    "^:cnorea(bbrev)?$":"like \":noreabbrev\"but for Command-line mode",
    "^:cnoreme(nu)?$":"like \":noremenu\"but for Command-line mode",
    "^:co(py)?$": "copy lines",
    "^:col(der)?$": "go to older error list",
    "^:colo(rscheme)?$": "load a specific color scheme",
    "^:com(mand)?$": "create user-defined command",
    "^:comc(lear)?$": "clear all user-defined commands",
    "^:comp(iler)?$": "do settings for a specific compiler",
    "^:con(tinue)?$": "go back to :while",
    "^:conf(irm)?$": "prompt user when confirmation required",
    "^:cope(n)?$": "open quickfix window",
    "^:cp(revious)?$": "go to previous error",
    "^:cpf(ile)?$": "go to last error in previous file",
    "^:cq(uit)?$": "quit Vim with an error code",
    "^:cr(ewind)?$": "go to the specified error, default first one",
    "^:cs(cope)?$": "execute cscope command",
    "^:cst(ag)?$": "use cscope to jump to a tag",
    "^:cu(nmap)?$":"like \":unmap\"but for Command-line mode",
    "^:cuna(bbrev)?$":"like \":unabbrev\"but for Command-line mode",
    "^:cunme(nu)?$": "remove menu for Command-line mode",
    "^:cw(indow)?$": "open or close quickfix window",
    "^:d(elete)?$": "delete lines",
    "^:delm(arks)?$": "delete marks",
    "^:deb(ug)?$": "run a command in debugging mode",
    "^:debugg(reedy)?$": "read debug mode commands from normal input",
    "^:delc(ommand)?$": "delete user-defined command",
    "^:delf(unction)?$": "delete a user function",
    "^:dif(fupdate)?$": "update 'diff' buffers",
    "^:diffg(et)?$": "remove differences in current buffer",
    "^:diffo(ff)?$": "switch off diff mode",
    "^:diffp(atch)?$": "apply a patch and show differences",
    "^:diffpu(t)?$": "remove differences in other buffer",
    "^:diffs(plit)?$": "show differences with another file",
    "^:diffthis$": "make current window a diff window",
    "^:dig(raphs)?$": "show or enter digraphs",
    "^:di(splay)?$": "display registers",
    "^:dj(ump)?$": "jump to #define",
    "^:dl$": "short for |:delete| with the 'l' flag",
    "^:del(ete)?l$": "short for |:delete| with the 'l' flag",
    "^:dli(st)?$": "list #defines",
    "^:do(autocmd)?$": "apply autocommands to current buffer",
    "^:doautoa(ll)?$": "apply autocommands for all loaded buffers",
    "^:d(elete)?p$": "short for |:delete| with the 'p' flag",
    "^:dr(op)?$": "jump to window editing file or edit file incurrent window",
    "^:ds(earch)?$": "list one #define",
    "^:dsp(lit)?$": "split window and jump to #define",
    "^:e(dit)?$": "edit a file",
    "^:ea(rlier)?$": "go to older change, undo",
    "^:ec(ho)?$": "echoes the result of expressions",
    "^:echoe(rr)?$": "like :echo, show like an error and use history",
    "^:echoh(l)?$": "set highlighting for echo commands",
    "^:echom(sg)?$": "same as :echo, put message in history",
    "^:echon$": "same as :echo, but without <EOL>",
    "^:el(se)?$": "part of an :if command",
    "^:elsei(f)?$": "part of an :if command",
    "^:em(enu)?$": "execute a menu by name",
    "^:en(dif)?$": "end previous :if",
    "^:endfo(r)?$": "end previous :for",
    "^:endf(unction)?$": "end of a user function",
    "^:endt(ry)?$": "end previous :try",
    "^:endw(hile)?$": "end previous :while",
    "^:ene(w)?$": "edit a new, unnamed buffer",
    "^:ex$":"same as\":edit\"",
    "^:exe(cute)?$": "execute result of expressions",
    "^:exi(t)?$":"same as\":exit\"",
    "^:exu(sage)?$": "overview of Ex commands",
    "^:f(ile)?$": "show or set the current file name",
    "^:files$": "list all files in the buffer list",
    "^:filet(ype)?$": "switch file type detection on/off",
    "^:fin(d)?$": "find file in 'path' and edit it",
    "^:fina(lly)?$": "part of a :try command",
    "^:fini(sh)?$": "quit sourcing a Vim script",
    "^:fir(st)?$": "go to the first file in the argument list",
    "^:fix(del)?$": "set key code of <Del>",
    "^:fo(ld)?$": "create a fold",
    "^:foldc(lose)?$": "close folds",
    "^:foldd(oopen)?$": "execute command on lines not in a closed fold",
    "^:folddoc(losed)?$": "execute command on lines in a closed fold",
    "^:foldo(pen)?$": "open folds",
    "^:for$": "for loop",
    "^:fu(nction)?$": "define a user function",
    "^:g(lobal)?$": "execute commands for matching lines",
    "^:go(to)?$": "go to byte in the buffer",
    "^:gr(ep)?$": "run 'grepprg' and jump to first match",
    "^:grepa(dd)?$": "like :grep, but append to current list",
    "^:gu(i)?$": "start the GUI",
    "^:gv(im)?$": "start the GUI",
    "^:ha(rdcopy)?$": "send text to the printer",
    "^:h(elp)?$": "open a help window",
    "^:helpc(lose)?$": "close one help window",
    "^:helpf(ind)?$": "dialog to open a help window",
    "^:helpg(rep)?$":"like \":grep\"but searches help files",
    "^:helpt(ags)?$": "generate help tags for a directory",
    "^:hi(ghlight)?$": "specify highlighting methods",
    "^:hid(e)?$": "hide current buffer for a command",
    "^:his(tory)?$": "print a history list",
    "^:i(nsert)?$": "insert text",
    "^:ia(bbrev)?$":"like \":abbrev\"but for Insert mode",
    "^:iabc(lear)?$":"like \":abclear\"but for Insert mode",
    "^:if$": "execute commands when condition met",
    "^:ij(ump)?$": "jump to definition of identifier",
    "^:il(ist)?$": "list lines where identifier matches",
    "^:im(ap)?$":"like \":map\"but for Insert mode",
    "^:imapc(lear)?$":"like \":mapclear\"but for Insert mode",
    "^:ime(nu)?$": "add menu for Insert mode",
    "^:ino(remap)?$":"like \":noremap\"but for Insert mode",
    "^:inorea(bbrev)?$":"like \":noreabbrev\"but for Insert mode",
    "^:inoreme(nu)?P":"like \":noremenu\"but for Insert mode",
    "^:int(ro)?$": "print the introductory message",
    "^:is(earch)?$": "list one line where identifier matches",
    "^:isp(lit)?$": "split window and jump to definition ofidentifier",
    "^:iu(nmap)?$":"like \":unmap\"but for Insert mode",
    "^:iuna(bbrev)?$":"like \":unabbrev\"but for Insert mode",
    "^:iunme(nu)?$": "remove menu for Insert mode",
    "^:j(oin)?$": "join lines",
    "^:ju(mps)?$": "print the jump list",
    "^:k$": "set a mark",
    "^:keepa(lt)?$": "following command keeps the alternate file",
    "^:kee(pmarks)?$": "following command keeps marks where they are",
    "^:keepj(umps)?$": "following command keeps jumplist and marks",
    "^:keepp(atterns)?$": "following command keeps search pattern history",
    "^:lN(ext)?$": "go to previous entry in location list",
    "^:lNf(ile)?$": "go to last entry in previous file",
    "^:l(ist)?$": "print lines",
    "^:lad(dexpr)?$": "add locations from expr",
    "^:laddb(uffer)?$": "add locations from buffer",
    "^:laddf(ile)?$": "add locations to current location list",
    "^:la(st)?$": "go to the last file in the argument list",
    "^:lan(guage)?$": "set the language (locale)",
    "^:lat(er)?$": "go to newer change, redo",
    "^:lb(uffer)?$": "parse locations and jump to first location",
    "^:lc(d)?$": "change directory locally",
    "^:lch(dir)?$": "change directory locally",
    "^:lcl(ose)?$": "close location window",
    "^:lcs(cope)?$":"like \":cscope\"but uses location list",
    "^:ld(o)?$": "execute command in valid location list entries",
    "^:lfd(o)?$": "execute command in each file in location list",
    "^:le(ft)?$": "left align lines",
    "^:lefta(bove)?$": "make split window appear left or above",
    "^:let$": "assign a value to a variable or option",
    "^:lex(pr)?$": "read locations from expr and jump to first",
    "^:lf(ile)?$": "read file with locations and jump to first",
    "^:lfir(st)?$": "go to the specified location, default first one",
    "^:lgetb(uffer)?$": "get locations from buffer",
    "^:lgete(xpr)?$": "get locations from expr",
    "^:lg(etfile)?$": "read file with locations",
    "^:lgr(ep)?$": "run 'grepprg' and jump to first match",
    "^:lgrepa(dd)?$": "like :grep, but append to current list",
    "^:lh(elpgrep)?$":"like\":helpgrep\"but uses location list",
    "^:ll$": "go to specific location",
    "^:lla(st)?$": "go to the specified location, default last one",
    "^:lli(st)?$": "list all locations",
    "^:lmak(e)?$": "execute external command 'makeprg' and parseerror messages",
    "^:lm(ap)?$":"like \":map!\"but includes Lang-Arg mode",
    "^:lmapc(lear)?$":"like \":mapclear!\"but includes Lang-Arg mode",
    "^:lne(xt)?$": "go to next location",
    "^:lnew(er)?$": "go to newer location list",
    "^:lnf(ile)?$": "go to first location in next file",
    "^:ln(oremap)?$":"like \":noremap!\"but includes Lang-Arg mode",
    "^:loadk(eymap)?$": "load the following keymaps until EOF",
    "^:lo(adview)?$": "load view for current window from a file",
    "^:loc(kmarks)?$": "following command keeps marks where they are",
    "^:lockv(ar)?$": "lock variables",
    "^:lol(der)?$": "go to older location list",
    "^:lope(n)?$": "open location window",
    "^:lp(revious)?$": "go to previous location",
    "^:lpf(ile)?$": "go to last location in previous file",
    "^:lr(ewind)?$": "go to the specified location, default first one",
    "^:ls$": "list all buffers",
    "^:lt(ag)?$": "jump to tag and add matching tags to thelocation list",
    "^:lu(nmap)?$":"like \":unmap!\"but includes Lang-Arg mode",
    "^:lua$": "execute |Lua| command",
    "^:luad(o)?$": "execute Lua command for each line",
    "^:luaf(ile)?$": "execute |Lua| script file",
    "^:lv(imgrep)?$": "search for pattern in files",
    "^:lvimgrepa(dd)?$": "like :vimgrep, but append to current list",
    "^:lw(indow)?$": "open or close location window",
    "^:m(ove)?$": "move lines",
    "^:ma(rk)?$": "set a mark",
    "^:mak(e)?$": "execute external command 'makeprg' and parseerror messages",
    "^:map$": "show or enter a mapping",
    "^:mapc(lear)?$": "clear all mappings for Normal and Visual mode",
    "^:marks$": "list all marks",
    "^:mat(ch)?$": "define a match to highlight",
    "^:me(nu)?$": "enter a new menu item",
    "^:menut(ranslate)?$": "add a menu translation item",
    "^:mes(sages)?$": "view previously displayed messages",
    "^:mk(exrc)?$": "write current mappings and settings to a file",
    "^:mks(ession)?$": "write session info to a file",
    "^:mksp(ell)?$": "produce .spl spell file",
    "^:mkv(imrc)?$": "write current mappings and settings to a file",
    "^:mkvie(w)?$": "write view of current window to a file",
    "^:mod(e)?$": "show or change the screen mode",
    "^:mz(scheme)?$": "execute MzScheme command",
    "^:mzf(ile)?$": "execute MzScheme script file",
    "^:nbc(lose)?$": "close the current Netbeans session",
    "^:nb(key)?$": "pass a key to Netbeans",
    "^:nbs(art)?$": "start a new Netbeans session",
    "^:n(ext)?$": "go to next file in the argument list",
    "^:new$": "create a new empty window",
    "^:nm(ap)?$":"like \":map\" but for Normal mode",
    "^:nmapc(lear)?$": "clear all mappings for Normal mode",
    "^:nme(nu)?$": "add menu for Normal mode",
    "^:nn(oremap)?$":"like \":noremap\" but for Normal mode",
    "^:nnoreme(nu)?$":"like \":noremenu\" but for Normal mode",
    "^:noa(utocmd)?$": "following commands don't trigger autocommands",
    "^:no(remap)?$": "enter a mapping that will not be remapped",
    "^:noh(lsearch)?$": "suspend 'hlsearch' highlighting",
    "^:norea(bbrev)?$": "enter an abbreviation that will not beremapped",
    "^:noreme(nu)?$": "enter a menu that will not be remapped",
    "^:norm(al)?$": "execute Normal mode commands",
    "^:nos(wapfile)?$": "following commands don't create a swap file",
    "^:nu(mber)?$": "print lines with line number",
    "^:nun(map)?$": "like \":unmap\" but for Normal mode",
    "^:nunme(nu)?$": "remove menu for Normal mode",
    "^:ol(dfiles)?$": "list files that have marks in the viminfo file",
    "^:o(pen)?$": "start open mode (not implemented)",
    "^:om(ap)?$":"like \":map\"but for Operator-pending mode",
    "^:omapc(lear)?$": "remove all mappings for Operator-pending mode",
    "^:ome(nu)?$": "add menu for Operator-pending mode",
    "^:on(ly)?$": "close all windows except the current one",
    "^:ono(remap)?$":"like \":noremap\"but for Operator-pending mode",
    "^:onoreme(nu)?$":"like \":noremenu\"but for Operator-pending mode",
    "^:opt(ions)?$": "open the options-window",
    "^:ou(nmap)?$":"like \":unmap\"but for Operator-pending mode",
    "^:ounme(nu)?$": "remove menu for Operator-pending mode",
    "^:ow(nsyntax)?$": "set new local syntax highlight for this window",
    "^:pc(lose)?$": "close preview window",
    "^:ped(it)?$": "edit file in the preview window",
    "^:pe(rl)?$": "execute Perl command",
    "^:p(rint)?$": "print lines",
    "^:profd(el)?$": "stop profiling a function or script",
    "^:prof(ile)?$": "profiling functions and scripts",
    "^:pro(mptfind)?$": "open GUI dialog for searching",
    "^:promptr(epl)?$": "open GUI dialog for search/replace",
    "^:perld(o)?$": "execute Perl command for each line",
    "^:po(p)?$": "jump to older entry in tag stack",
    "^:popu(p)?$": "popup a menu by name",
    "^:pp(op)?$":"\":pop\"in preview window",
    "^:pre(serve)?$": "write all text to swap file",
    "^:prev(ious)?$": "go to previous file in argument list",
    "^:ps(earch)?$":"like \":ijump\"but shows match in preview window",
    "^:pt(ag)?$": "show tag in preview window",
    "^:ptN(ext)?$": "|:tNext| in preview window",
    "^:ptf(irst)?$": "|:trewind| in preview window",
    "^:ptj(ump)?$": "|:tjump| and show tag in preview window",
    "^:ptl(ast)?$": "|:tlast| in preview window",
    "^:ptn(ext)?$": "|:tnext| in preview window",
    "^:ptp(revious)?$": "|:tprevious| in preview window",
    "^:ptr(ewind)?$": "|:trewind| in preview window",
    "^:pts(elect)?$": "|:tselect| and show tag in preview window",
    "^:pu(t)?$": "insert contents of register in the text",
    "^:pw(d)?$": "print current directory",
    "^:py3$": "execute Python 3 command",
    "^:python3$": "same as :py3",
    "^:py3d(o)?$": "execute Python 3 command for each line",
    "^:py3f(ile)?$": "execute Python 3 script file",
    "^:py(thon)?$": "execute Python command",
    "^:pyd(o)?$": "execute Python command for each line",
    "^:pyf(ile)?$": "execute Python script file",
    "^:q(uit)?$": "quit current window (when one window quit Vim)",
    "^:quita(ll)?$": "quit Vim",
    "^:qa(ll)?$": "quit Vim",
    "^:r(ead)?$": "read file into the text",
    "^:rec(over)?$": "recover a file from a swap file",
    "^:red(o)?$": "redo one undone change",
    "^:redi(r)?$": "redirect messages to a file or register",
    "^:redr(aw)?$": "force a redraw of the display",
    "^:redraws(tatus)?$": "force a redraw of the status line(s)",
    "^:reg(isters)?$": "display the contents of registers",
    "^:res(ize)?$": "change current window height",
    "^:ret(ab)?$": "change tab size",
    "^:retu(rn)?$": "return from a user function",
    "^:rew(ind)?$": "go to the first file in the argument list",
    "^:ri(ght)?$": "right align text",
    "^:rightb(elow)?$": "make split window appear right or below",
    "^:rub(y)?$": "execute Ruby command",
    "^:rubyd(o)?$": "execute Ruby command for each line",
    "^:rubyf(ile)?$": "execute Ruby script file",
    "^:rund(o)?$": "read undo information from a file",
    "^:ru(ntime)?$": "source vim scripts in 'runtimepath'",
    "^:rv(iminfo)?$": "read from viminfo file",
    "^:s(ubstitute)?$": "find and replace text",
    "^:sN(ext)?$": "split window and go to previous file inargument list",
    "^:san(dbox)?$": "execute a command in the sandbox",
    "^:sa(rgument)?$": "split window and go to specific file inargument list",
    "^:sal(l)?$": "open a window for each file in argument list",
    "^:sav(eas)?$": "save file under another name.",
    "^:sb(uffer)?$": "split window and go to specific file in thebuffer list",
    "^:sbN(ext)?$": "split window and go to previous file in thebuffer list",
    "^:sba(ll)?$": "open a window for each file in the buffer list",
    "^:sbf(irst)?$": "split window and go to first file in thebuffer list",
    "^:sbl(ast)?$": "split window and go to last file in bufferlist",
    "^:sbm(odified)?$": "split window and go to modified file in thebuffer list",
    "^:sbn(ext)?$": "split window and go to next file in the bufferlist",
    "^:sbp(revious)?$": "split window and go to previous file in thebuffer list",
    "^:sbr(ewind)?$": "split window and go to first file in thebuffer list",
    "^:scr(iptnames)?$": "list names of all sourced Vim scripts",
    "^:scripte(ncoding)?$": "encoding used in sourced Vim script",
    "^:scs(cope)?$": "split window and execute cscope command",
    "^:se(t)?$": "show or set options",
    "^:setf(iletype)?$": "set 'filetype', unless it was set already",
    "^:setg(lobal)?$": "show global values of options",
    "^:setl(ocal)?$": "show or set options locally",
    "^:sf(ind)?$": "split current window and edit file in 'path'",
    "^:sfir(st)?$": "split window and go to first file in theargument list",
    "^:sh(ell)?$": "escape to a shell",
    "^:sim(alt)?$": "Win32 GUI: simulate Windows ALT key",
    "^:sig(n)?$": "manipulate signs",
    "^:sil(ent)?$": "run a command silently",
    "^:sl(eep)?$": "do nothing for a few seconds",
    "^:sla(st)?$": "split window and go to last file in theargument list",
    "^:sm(agic)?$": ":substitute with 'magic'",
    "^:smap$":"like \":map\"but for Select mode",
    "^:smapc(lear)?$": "remove all mappings for Select mode",
    "^:sme(nu)?$": "add menu for Select mode",
    "^:sn(ext)?$": "split window and go to next file in theargument list",
    "^:sni(ff)?$": "send request to sniff",
    "^:sno(magic)?$": ":substitute with 'nomagic'",
    "^:snor(emap)?$":"like \":noremap\"but for Select mode",
    "^:snoreme(nu)?$":"like \":noremenu\"but for Select mode",
    "^:sor(t)?$": "sort lines",
    "^:so(urce)?$": "read Vim or Ex commands from a file",
    "^:spelld(ump)?$": "split window and fill with all correct words",
    "^:spe(llgood)?$": "add good word for spelling",
    "^:spelli(nfo)?$": "show info about loaded spell files",
    "^:spellr(epall)?$": "replace all bad words like last |z=|",
    "^:spellu(ndo)?$": "remove good or bad word",
    "^:spellw(rong)?$": "add spelling mistake",
    "^:sp(lit)?$": "split current window",
    "^:spr(evious)?$": "split window and go to previous file in theargument list",
    "^:sre(wind)?$": "split window and go to first file in theargument list",
    "^:st(op)?$": "suspend the editor or escape to a shell",
    "^:sta(g)?$": "split window and jump to a tag",
    "^:star(tinsert)?$": "start Insert mode",
    "^:startg(replace)?$": "start Virtual Replace mode",
    "^:startr(eplace)?$": "start Replace mode",
    "^:stopi(nsert)?$": "stop Insert mode",
    "^:stj(ump)?$":"do \":tjump\"and split window",
    "^:sts(elect)?$":"do \":tselect\"and split window",
    "^:sun(hide)?$":"same as \":unhide\"",
    "^:sunm(ap)?$":"like \":unmap\"but for Select mode",
    "^:sunme(nu)?$": "remove menu for Select mode",
    "^:sus(pend)?$":"same as \":stop\"",
    "^:sv(iew)?$": "split window and edit file read-only",
    "^:sw(apname)?$": "show the name of the current swap file",
    "^:sy(ntax)?$": "syntax highlighting",
    "^:synti(me)?$": "measure syntax highlighting speed",
    "^:sync(bind)?$": "sync scroll binding",
    "^:t$":"same as \":copy\"",
    "^:tN(ext)?$": "jump to previous matching tag",
    "^:tabN(ext)?$": "go to previous tab page",
    "^:tabc(lose)?$": "close current tab page",
    "^:tabdo$": "execute command in each tab page",
    "^:tabe(dit)?$": "edit a file in a new tab page",
    "^:tabf(ind)?$": "find file in 'path', edit it in a new tab page",
    "^:tabfir(st)?$": "got to first tab page",
    "^:tabl(ast)?$": "got to last tab page",
    "^:tabm(ove)?$": "move tab page to other position",
    "^:tabnew$": "edit a file in a new tab page",
    "^:tabn(ext)?$": "go to next tab page",
    "^:tabo(nly)?$": "close all tab pages except the current one",
    "^:tabp(revious)?$": "go to previous tab page",
    "^:tabr(ewind)?$": "got to first tab page",
    "^:tabs$": "list the tab pages and what they contain",
    "^:tab$": "create new tab when opening new window",
    "^:ta(g)?$": "jump to tag",
    "^:tags$": "show the contents of the tag stack",
    "^:tc(l)?$": "execute Tcl command",
    "^:tcld(o)?$": "execute Tcl command for each line",
    "^:tclf(ile)?$": "execute Tcl script file",
    "^:te(aroff)?$": "tear-off a menu",
    "^:tf(irst)?$": "jump to first matching tag",
    "^:th(row)?$": "throw an exception",
    "^:tj(ump)?$":"like \":tselect\", but jump directly when thereis only one match",
    "^:tl(ast)?$": "jump to last matching tag",
    "^:tm(enu)?$": "define menu tooltip",
    "^:tn(ext)?$": "jump to next matching tag",
    "^:to(pleft)?$": "make split window appear at top or far left",
    "^:tp(revious)?$": "jump to previous matching tag",
    "^:tr(ewind)?$": "jump to first matching tag",
    "^:try$": "execute commands, abort on error or exception",
    "^:ts(elect)?$": "list matching tags and select one",
    "^:tu(nmenu)?$": "remove menu tooltip",
    "^:u(ndo)?$": "undo last change(s)",
    "^:undoj(oin)?$": "join next change with previous undo block",
    "^:undol(ist)?$": "list leafs of the undo tree",
    "^:una(bbreviate)?$": "remove abbreviation",
    "^:unh(ide)?$": "open a window for each loaded file in thebuffer list",
    "^:unl(et)?$": "delete variable",
    "^:unlo(ckvar)?$": "unlock variables",
    "^:unm(ap)?$": "remove mapping",
    "^:unme(nu)?$": "remove menu",
    "^:uns(ilent)?$": "run a command not silently",
    "^:up(date)?$": "write buffer if modified",
    "^:v(global)?$": "execute commands for not matching lines",
    "^:ve(rsion)?$": "print version number and other info",
    "^:verb(ose)?$": "execute command with 'verbose' set",
    "^:vert(ical)?$": "make following command split vertically",
    "^:vim(grep)?$": "search for pattern in files",
    "^:vimgrepa(dd)?$": "like :vimgrep, but append to current list",
    "^:vi(sual)?$":"same as \":edit\", but turns off \"Ex\"mode",
    "^:viu(sage)?$": "overview of Normal mode commands",
    "^:vie(w)?$": "edit a file read-only",
    "^:vm(ap)?$":"like \":map\"but for Visual+Select mode",
    "^:vmapc(lear)?$": "remove all mappings for Visual+Select mode",
    "^:vme(nu)?$": "add menu for Visual+Select mode",
    "^:vne(w)?$": "create a new empty window, vertically split",
    "^:vn(oremap)?$":"like \":noremap\"but for Visual+Select mode",
    "^:vnoreme(nu)?$":"like \":noremenu\"but for Visual+Select mode",
    "^:vs(plit)?$": "split current window vertically",
    "^:vu(nmap)?$":"like \":unmap\"but for Visual+Select mode",
    "^:vunme(nu)?$": "remove menu for Visual+Select mode",
    "^:windo$": "execute command in each window",
    "^:w(rite)?$": "write to a file",
    "^:wN(ext)?$": "write to a file and go to previous file inargument list",
    "^:wa(ll)?$": "write all (changed) buffers",
    "^:wh(ile)?$": "execute loop for as long as condition met",
    "^:wi(nsize)?$": "get or set window size (obsolete)",
    "^:winc(md)?$": "execute a Window (CTRL-W) command",
    "^:winp(os)?$": "get or set window position",
    "^:wn(ext)?$": "write to a file and go to next file inargument list",
    "^:wp(revious)?$": "write to a file and go to previous file inargument list",
    "^:wq$": "write to a file and quit window or Vim",
    "^:wqa(ll)?$": "write all changed buffers and quit Vim",
    "^:ws(verb)?$": "pass the verb to workshop over IPC",
    "^:wu(ndo)?$": "write undo information to a file",
    "^:wv(iminfo)?$": "write to viminfo file",
    "^:x(it)?$": "write if buffer changed and quit window or Vim",
    "^:xa(ll)?$":"same as \":wqall\"",
    "^:xmapc(lear)?$": "remove all mappings for Visual mode",
    "^:xm(ap)?$":"like \":map\"but for Visual mode",
    "^:xme(nu)?$": "add menu for Visual mode",
    "^:xn(oremap)?$":"like \":noremap\"but for Visual mode",
    "^:xnoreme(nu)?$":"like \":noremenu\"but for Visual mode",
    "^:xu(nmap)?$":"like \":unmap\"but for Visual mode",
    "^:xunme(nu)?$": "remove menu for Visual mode",
    "^:y(ank)?$": "yank lines into a register",
    "^:z$": "print some lines",
    "^:~$":"repeat last \":substitute\""
  }
}

